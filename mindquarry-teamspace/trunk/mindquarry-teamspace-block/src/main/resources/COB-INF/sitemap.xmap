<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	Copyright (C) 2005 MindQuarry GmbH, All Rights Reserved 
-->
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
	<map:components>
		<map:readers>
			<map:reader logger="imageop" name="image-op-crop-resize" src="org.apache.cocoon.reading.imageop.ImageOpReader" >
				<effects>
					<op type="crop" prefix="crop-" />
					<op type="resize" prefix="size-" />
				</effects>
			</map:reader>
		</map:readers>
		<map:actions>
			<map:action name="setnohttpcache"
				src="org.apache.cocoon.acting.HttpCacheAction">
				<seconds>0</seconds>
			</map:action>
			<map:action name="log"
				src="com.mindquarry.webapp.acting.DebugLogAction" />
			<action name="authorise"
				src="com.mindquarry.webapp.acting.AuthorisationAction" />
		</map:actions>

		<map:selectors>
			<map:selector name="lightbox-request"
				src="com.mindquarry.webapp.ajax.LightboxRequestSelector" />
			<map:selector name="ajax-request"
				src="org.apache.cocoon.ajax.AjaxRequestSelector" />

			<map:selector name="REST"
				src="org.apache.cocoon.selection.RegexpHeaderSelector">
				<header-name>accept</header-name>
				<pattern name="html">application/xhtml\+xml|text/html|\*/\*</pattern>
				<pattern name="xml">text/xml</pattern>
			</map:selector>
		</map:selectors>

		<map:transformers default="xslt">
			<map:transformer name="browser-update"
				src="org.apache.cocoon.ajax.BrowserUpdateTransformer" />
		</map:transformers>
	</map:components>

	<map:views>
		<map:view name="content" from-label="content">
			<map:serialize type="xml" />
		</map:view>

		<map:view name="html" from-label="html">
			<map:serialize type="xml" />
		</map:view>

		<map:view name="form" from-label="form">
			<map:serialize type="xml" />
		</map:view>
	</map:views>

	<map:flow language="javascript">
		<map:script src="flows/create-teamspace.js" />
		<map:script src="flows/teamspaces-view.js" />
		<map:script src="flows/edit-members.js" />
	</map:flow>

	<map:resources>
		<map:resource name="layouting">
			<map:select type="lightbox-request">
				<map:when test="true">
					<map:transform
						src="block:/xslt/html2lightbox.xsl">
						<map:parameter name="fullPath"
							value="{block-path:}{request:pathInfo}" />
						<map:parameter name="sitemapPath"
							value="{request:pathInfo}" />
						<map:parameter name="user.agent"
							value="{request-header:User-Agent}" />
					</map:transform>
					<map:serialize type="xml" />
				</map:when>
				<map:otherwise>
					<map:transform src="block:/xslt/html2html.xsl"
						type="xalan">
						<map:parameter name="fullPath"
							value="{block-path:}{request:pathInfo}" />
						<map:parameter name="sitemapPath"
							value="{request:pathInfo}" />
						<map:parameter name="user.agent"
							value="{request-header:User-Agent}" />
						<map:parameter name="username"
							value="{request-attr:username}" />
					</map:transform>
				</map:otherwise>
			</map:select>

			<map:select type="ajax-request">
				<map:when test="true">
					<map:serialize type="xml" />
				</map:when>
				<map:otherwise>
					<map:serialize type="html" />
				</map:otherwise>
			</map:select>
		</map:resource>

		<map:resource name="form2html">
			<map:transform src="xslt/forms/form2html.xsl"
				label="form">
				<map:parameter name="fullPath"
					value="{block-path:}{request:pathInfo}" />
				<map:parameter name="sitemapPath"
					value="{request:pathInfo}" />
			</map:transform>
		</map:resource>
	</map:resources>

	<map:pipelines>
		<!-- resources pipeline / use noncaching for debugging -->
		<map:pipeline type="noncaching">
			<map:match pattern="css/*.css">
				<map:select type="resource-exists">
					<map:when test="css/{1}.css">
						<!-- if it exists, load it from this sitemap's resources -->
						<map:read src="css/{1}.css" />
					</map:when>
					<!-- if not, look in the super block -->
					<map:otherwise>
						<map:read src="block:super:/css/{1}.css" />
					</map:otherwise>
				</map:select>
			</map:match>

			<map:match pattern="xslt/*.xsl">
				<map:select type="resource-exists">
					<map:when test="xslt/{1}.xsl">
						<!-- if it exists, load it from this sitemap's resources -->
						<map:read src="xslt/{1}.xsl" />
					</map:when>
					<!-- if not, look in the super block -->
					<map:otherwise>
						<map:read src="block:super:/xslt/{1}.xsl" />
					</map:otherwise>
				</map:select>
			</map:match>

			<map:match pattern="scripts/*.js">
				<map:select type="resource-exists">
					<map:when test="scripts/{1}.js">
						<map:read src="scripts/{1}.js" />
					</map:when>
					<map:otherwise>
						<map:read src="block:super:/scripts/{1}.js" />
					</map:otherwise>
				</map:select>
			</map:match>

			<map:match pattern="images/*.*">
				<map:select type="resource-exists">
					<map:when test="images/{1}.{2}">
						<map:read src="images/{1}.{2}" />
					</map:when>
					<map:otherwise>
						<map:read src="block:super:/images/{1}.{2}" />
					</map:otherwise>
				</map:select>
			</map:match>

			<map:match pattern="buttons/*.*">
				<map:select type="resource-exists">
					<map:when test="buttons/{1}_button.{2}">
						<map:read src="buttons/{1}_button.{2}" />
					</map:when>
					<map:otherwise>
						<map:read src="block:super:/buttons/{1}.{2}" />
					</map:otherwise>
				</map:select>
			</map:match>

			<map:match pattern="icons/*x*/*/*.png">
				<map:select type="resource-exists">
					<map:when test="icons/{1}x{2}/{3}/{4}.png">
						<map:read src="icons/{1}x{2}/{3}/{4}.png" />
					</map:when>
					<map:otherwise>
						<map:read
							src="block:super:/icons/{1}x{2}/{3}/{4}.png" />
					</map:otherwise>
				</map:select>
			</map:match>
		</map:pipeline>

		<!-- user pipeline / use noncaching for debugging -->
		<map:pipeline type="noncaching"><!-- eg. users/[size]/[name].[type] -->
			<map:match pattern="users/*/*.*">
				<map:select type="resource-exists">
					<map:when test="jcr:///users/{2}.{3}">
						<map:read type="image-op-crop-resize" src="jcr:///users/{2}.{3}">
							<map:parameter name="crop-ratio" value="1"/>
							<map:parameter name="size-width" value="{1}"/>
							<map:parameter name="size-height" value="{1}"/>
							<map:parameter name="output-format" value="{3}"/>
						</map:read>
					</map:when>
					<map:when test="jcr:///users/{2}.png">
						<map:read type="image-op-crop-resize" src="jcr:///users/{2}.png">
							<map:parameter name="crop-ratio" value="1"/>
							<map:parameter name="size-width" value="{1}"/>
							<map:parameter name="size-height" value="{1}"/>
							<map:parameter name="output-format" value="{3}"/>
						</map:read>
					</map:when>
					<map:when test="jcr:///users/{2}.gif">
						<map:read type="image-op-crop-resize" src="jcr:///users/{2}.gif">
							<map:parameter name="crop-ratio" value="1"/>
							<map:parameter name="size-width" value="{1}"/>
							<map:parameter name="size-height" value="{1}"/>
							<map:parameter name="output-format" value="{3}"/>
						</map:read>
					</map:when>
					<map:when test="jcr:///users/{2}.jpg">
						<map:read type="image-op-crop-resize" src="jcr:///users/{2}.jpg">
							<map:parameter name="crop-ratio" value="1"/>
							<map:parameter name="size-width" value="{1}"/>
							<map:parameter name="size-height" value="{1}"/>
							<map:parameter name="output-format" value="{3}"/>
						</map:read>
					</map:when>
					<map:when test="jcr:///users/{2}.bmp">
						<map:read type="image-op-crop-resize" src="jcr:///users/{2}.bmp">
							<map:parameter name="crop-ratio" value="1"/>
							<map:parameter name="size-width" value="{1}"/>
							<map:parameter name="size-height" value="{1}"/>
							<map:parameter name="output-format" value="{3}"/>
						</map:read>
					</map:when>
					<map:otherwise>
						<map:read type="image-op-crop-resize" src="images/anonymous-user.png" >
							<map:parameter name="crop-ratio" value="1"/>
							<map:parameter name="size-width" value="{1}"/>
							<map:parameter name="size-height" value="{1}"/>
							<map:parameter name="output-format" value="{3}"/>
						</map:read>
					</map:otherwise>
				</map:select>
			</map:match>
			
			<map:match pattern="users/*.*">
				<map:read src="cocoon:/users/48/{1}.{2}"/>
			</map:match>

			<map:match pattern="*.png">
				<map:read src="images/anonymous-project.png" />
			</map:match>
		</map:pipeline>

		<!-- use noncaching pipeline -->
		<map:pipeline type="noncaching">
			<!-- teamspace list -->
			<map:match pattern="">
				<!-- check request type: REST / HTML or other -->
				<map:select type="REST">

					<!--  handle HTML request -->
					<map:when test="html">
						<map:call
							function="listTeamspacesForUser">
							<map:parameter name="username"
								value="{request-attr:username}" />
							<map:parameter name="target"
								value="views/teamspacesView" />
						</map:call>
					</map:when>

					<!--  handle REST request -->
					<map:when test="xml">
						<map:call
							function="listTeamspacesForUser">
							<map:parameter name="username"
								value="{request-attr:username}" />
							<map:parameter name="target"
								value="views/teamspacesXMLView" />
						</map:call>
					</map:when>
				</map:select>
			</map:match>
		</map:pipeline>

		<!-- use noncaching pipeline -->
		<map:pipeline type="noncaching" internal-only="true">
			<map:match pattern="views/teamspacesView">
				<map:generate src="jx/teamspace-list-view.jx" type="jx"
					label="content" />
				
				<map:transform src="xslt/teamspaces2html.xsl"
					label="html">
					<map:parameter name="username"
						value="{request-attr:username}" />
					<map:parameter name="fullPath"
						value="{block-path:}{request:pathInfo}" />
					<map:parameter name="sitemapPath"
						value="{request:pathInfo}" />
					<map:parameter name="user.agent"
						value="{request-header:User-Agent}" />
				</map:transform>
				
				<map:call resource="form2html" />
				<map:call resource="layouting" />
			</map:match>

			<map:match pattern="views/teamspacesXMLView">
				<map:generate src="jx/teamspace-list-view.jx" type="jx"
					label="content" />
				
				<map:transform src="xslt/teamspaces2xml.xsl" />
				<map:serialize type="xml" />
			</map:match>
			
			<map:match pattern="views/teamspaceXMLView">
				<map:generate src="jx/teamspace-view.jx" type="jx"
					label="content" />
				
				<map:transform src="xslt/teamspace2xml.xsl">
					<map:parameter name="reposURI"
						value="{system-property:mindquarry.reposURI}" />
				</map:transform>
				
				<map:serialize type="xml" />
			</map:match>
			
			<map:match pattern="views/teamspaceXMLViewWithUsers">
				<map:generate src="jx/teamspace-view.jx" type="jx"
					label="content" />
				<map:transform src="xslt/teamspace2selectionlist.xsl" />
				<map:serialize type="xml" />
			</map:match>
		</map:pipeline>

		<!-- use noncaching pipeline -->
		<map:pipeline type="noncaching">
			<map:match pattern="*/editMembers/">
				<map:act type="authorise" src="jcr:///teamspaces/{1}/editMember/"/>
				<map:call function="handleForm">
					<map:parameter name="function"
						value="processEditMembersForm" />
					<map:parameter name="definitionURI"
						value="forms/edit-members-form.xml" />
					<map:parameter name="teamId" value="{1}" />
				</map:call>
			</map:match>
		</map:pipeline>

		<!-- creating users and teamspace / use noncaching pipeline -->
		<map:pipeline type="noncaching">
			<map:match pattern="createUser/">
				<map:act type="authorise" src="jcr:///users"/>
				<map:call function="handleForm">
					<map:parameter name="function"
						value="processCreateUser" />
					<map:parameter name="definitionURI"
						value="forms/edit-members-form.xml" />
					<map:parameter name="username"
						value="{request-attr:username}" />
				</map:call>
			</map:match>
			
			<map:match pattern="editUser/">
				<map:call function="handleForm">
					<map:parameter name="function"
						value="processEditUser" />
					<map:parameter name="definitionURI"
						value="forms/edit-members-form.xml" />
					<map:parameter name="username"
						value="{request-attr:username}" />
				</map:call>
			</map:match>

			<map:match pattern="createTeamspace/">
				<map:act type="authorise" src="jcr:///teamspaces"/>
				<map:call function="handleForm">
					<map:parameter name="function"
						value="processCreateTeamspaceForm" />
					<map:parameter name="definitionURI"
						value="forms/create-teamspace-form.xml" />
					<map:parameter name="username"
						value="{request-attr:username}" />
				</map:call>
			</map:match>
		</map:pipeline>

		<map:pipeline>
			<map:match pattern="*.instance" internal-only="true">
				<map:generate type="jx" src="forms/{1}-template.xml">
					<map:parameter name="locale"
						value="{flow-attribute:locale}" />
				</map:generate>
				<map:transform type="browser-update" />
				<map:call resource="form2html" />
				<map:call resource="layouting" />
			</map:match>

			<!-- Continue a scenario. The continuation id is passed in the URL
				(typically used for GET requests) -->
			<map:match pattern="**/*.continue">
				<map:act type="setnohttpcache" />
				<map:call continuation="{2}" />
			</map:match>
			<map:match pattern="*.continue">
				<map:act type="setnohttpcache" />
				<map:call continuation="{1}" />
			</map:match>
			
			<!-- single teamspace -->
			<map:match pattern="*">
				<map:act type="authorise" src="jcr:///teamspaces/{1}/metadata"/>
				<!-- check request type: REST / HTML or other -->
				<map:select type="REST">
					<!--  handle REST request -->
					<map:when test="xml">
						<map:call function="teamspacesByID">
							<map:parameter name="teamspaceID"
								value="{1}" />
							<map:parameter name="target"
								value="views/teamspaceXMLView" />
						</map:call>
					</map:when>
				</map:select>
			</map:match>
			
			<!-- single teamspace -->
			<map:match pattern="*/users.xml">
				<!-- TODO: enable this authorisation when the authorisation for internal block calls works -->
				<!-- <map:act type="authorise" src="jcr:///teamspaces/{1}/users.xml"/> -->
				<map:call function="teamspacesByID">
					<map:parameter name="teamspaceID"
						value="{1}" />
					<map:parameter name="target"
						value="views/teamspaceXMLViewWithUsers" />
				</map:call>
			</map:match>

			<!--+
				| forward any unknown stuff to the super block 
				| NOTE: This must be the last matcher!
				+-->
			<map:match pattern="**">
				<map:read src="block:super:/{1}" />
			</map:match>
		</map:pipeline>
	</map:pipelines>
</map:sitemap>
