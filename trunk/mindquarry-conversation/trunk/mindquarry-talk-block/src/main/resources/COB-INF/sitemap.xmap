<?xml version="1.0" encoding="UTF-8"?>

<!--
	Copyright (C) 2006-2007 Mindquarry GmbH, All Rights Reserved
	
	The contents of this file are subject to the Mozilla Public License
	Version 1.1 (the "License"); you may not use this file except in
	compliance with the License. You may obtain a copy of the License at
	http://www.mozilla.org/MPL/
	
	Software distributed under the License is distributed on an "AS IS"
	basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
	License for the specific language governing rights and limitations
	under the License.
-->

<sitemap xmlns="http://apache.org/cocoon/sitemap/1.0">

	<!-- TALK -->

	<components>
		<generators default="file">
			<generator name="collection"
				src="org.apache.cocoon.generation.TraversableGenerator">
				</generator>
		</generators>
		<transformers>
			<transformer name="sendmail" src="org.apache.cocoon.mail.transformation.SendMailTransformer"/>
		</transformers>
	</components>
	
	<flow language="javascript">
		<script src="flows/withTalkManager.js" />
	</flow>

	<resources>
		<!-- general resource called upon errors (in each external pipeline
			below), calls error-layouting pipeline for styling -->
		<resource name="error-handling">
			<select type="exception">
				<when test="authorisation">
					<!-- non-authorised should be 404 resource not found -->
					<generate type="notifying"/>
					<call resource="error-layouting">
						<parameter name="pageTitle" value="Sorry, not authorized"/>
						<parameter name="httpStatus" value="404"/>
						<parameter name="showSupportContact" value="false"/>
					</call>
				</when>
				<when test="resource-does-not-exist">
					<generate type="notifying"/>
					<call resource="error-layouting">
						<parameter name="pageTitle" value="Sorry, resource was not found"/>
						<parameter name="httpStatus" value="404"/>
						<parameter name="showSupportContact" value="false"/>
					</call>
				</when>
				<otherwise>
					<generate type="notifying"/>
					<call resource="error-layouting">
						<parameter name="pageTitle" value="Sorry, internal system error"/>
						<parameter name="httpStatus" value="500"/>
						<parameter name="showSupportContact" value="true"/>
					</call>
				</otherwise>
			</select>			
		</resource>
		
		<!-- shows styled error page and sets http status code on serializers -->
		<resource name="error-layouting">
			<select type="REST">
				<when test="html">
					<transform src="servlet:super:/xslt/error/error2html.xsl">
						<parameter name="pageTitle" value="{pageTitle}"/>			
						<parameter name="httpStatus" value="{httpStatus}"/>
						<parameter name="showSupportContact" value="{showSupportContact}"/>
						<parameter name="artifactId"
							value="{pom-property:com.mindquarry.wiki/mindquarry-wiki-block/artifactId}"/>							
						<parameter name="version"
							value="{pom-property:com.mindquarry.wiki/mindquarry-wiki-block/version}"/>							
						<parameter name="timeStamp"
							value="{pom-property:com.mindquarry.wiki/mindquarry-wiki-block/timeStamp}"/>							
					</transform>
					<transform src="servlet:/xslt/html2html.xsl"
						type="xalan">
						<parameter name="servlet"
							value="talk" />
						<parameter name="fullPath"
							value="{block-path:}{request:pathInfo}" />
						<parameter name="sitemapPath"
							value="{request:pathInfo}" />
						<parameter name="serverBasePath" 
							value="{system-property:mindquarry.server.url}{request:contextPath}" />
						<parameter name="username"
							value="{request-attr:username}" />
						<parameter name="serverTitle"
							value="{system-property:mindquarry.title}" />
						<parameter name="artifactId"
							value="{pom-property:com.mindquarry.wiki/mindquarry-wiki-block/artifactId}"/>							
						<parameter name="version"
							value="{pom-property:com.mindquarry.wiki/mindquarry-wiki-block/version}"/>							
						<parameter name="timeStamp"
							value="{pom-property:com.mindquarry.wiki/mindquarry-wiki-block/timeStamp}"/>							
					</transform>
					<select type="parameter">
						<parameter name="parameter-selector-test" value="{httpStatus}"/>
						
						<when test="404"> <!-- not found -->
							<serialize type="html" status-code="404"/>							
						</when>
						<when test="500"> <!-- internal server error -->
							<serialize type="html" status-code="500"/>							
						</when>
						<otherwise>
							<serialize type="html" />							
						</otherwise>
					</select>					
				</when>
				<when test="xml">
					<!-- directly output cocoon's error xml for xml clients -->
					<select type="parameter">
						<parameter name="parameter-selector-test" value="{httpStatus}"/>
						
						<when test="404"> <!-- not found -->
							<serialize type="xml" status-code="404"/>							
						</when>
						<when test="500"> <!-- internal server error -->
							<serialize type="xml" status-code="500"/>							
						</when>
						<otherwise>
							<serialize type="xml" />							
						</otherwise>
					</select>					
				</when>
			</select>
		</resource>
		
		<resource name="storeandsendmail">
			<transform type="include" />
			<transform src="xslt/xml/extract-emails-and-subject.xsl" />
			<transform type="write-source" />
			<transform type="sendmail" />
			<act type="log" src="new message is distributed" />
			<select type="REST">
				<when test="html">
					<transform src="xslt/xml/create-bu-redirect.xsl">
						<parameter name="to" value="" />
					</transform>
				</when>
				<otherwise>
					<transform src="xslt/xml/create-bu-redirect.xsl">
						<parameter name="to" value="message{timestamp}" />
					</transform>
				</otherwise>
			</select>
		</resource>
		
		<!-- standard final page layouting -->
		<resource name="layouting">
			<transform type="teamspace" />
			<select type="lightbox-request">
				<when test="true">
					<transform
						src="servlet:/xslt/html2lightbox.xsl">
						<parameter name="serverBasePath" 
							value="{system-property:mindquarry.server.url}{request:contextPath}" />
						<parameter name="username"
							value="{request-attr:username}" />
					</transform>
					<serialize type="xml"/>
				</when>
				<otherwise>
					<transform src="servlet:/xslt/html2html.xsl"
						type="xalan" label="htmlhtml">
						<parameter name="servlet"
							value="talk" />
						<parameter name="fullPath"
							value="{block-path:}{request:pathInfo}" />
						<parameter name="sitemapPath"
							value="{request:pathInfo}" />
						<parameter name="serverBasePath" 
							value="{system-property:mindquarry.server.url}{request:contextPath}" />
						<parameter name="username"
							value="{request-attr:username}" />
						<parameter name="serverTitle"
							value="{system-property:mindquarry.title}" />
						<parameter name="artifactId"
							value="{pom-property:com.mindquarry.conversation/mindquarry-talk-block/artifactId}"/>
						<parameter name="version"
							value="{pom-property:com.mindquarry.conversation/mindquarry-talk-block/version}"/>
						<parameter name="timeStamp"
							value="{pom-property:com.mindquarry.conversation/mindquarry-talk-block/timeStamp}"/>
					</transform>
					<transform type="cinclude"/>
				</otherwise>
			</select>
			
			<!-- check AJAX request attribute -->
			<select type="ajax-request">
				<when test="true">
					<select type="request-parameter">
						<parameter name="parameter-name" value="dojo.transport"/>
						<when test="iframe">
							<transform src="resource://org/apache/cocoon/forms/resources/IframeTransport-bu-styling.xsl"/>
							<serialize type="xhtml"/><!-- this is REALLY important -->
						</when>
						<otherwise>
							<serialize type="xml"/>
						</otherwise>
					</select>
				</when> 
				<otherwise>
<!--					<transform type="htmlcleanup" />-->
<!--					<transform type="tee" src="file:///tmp/htmlcleanup.xml" />-->
					<serialize type="html"/>
				</otherwise>
			</select>
		</resource>
		
		<resource name="create-new-message">
			<act type="log" src="new message {timestamp}" />
			<select type="request-method">
				<when test="PUT">
					<generate type="stream">
						<parameter name="defaultContentType" value="text/xml" />
					</generate>
				</when>
				<when test="POST">
					<generate type="jx" src="xml/jx/message.xml">
						<parameter name="user" value="{request-attr:username}" />
						<parameter name="body" value="{request-param:body}" />
					</generate>
				</when>
			</select>
			<transform src="xslt/xml/prepare-message.xsl">
				<parameter name="path" value="jcr:///teamspaces/{teamspace}/talk/conversations/{conversation}/message{timestamp}.xml"/>
				<parameter name="queryroot" value="model://TeamQuery#teamspaceById({teamspace}).getUsers()" />
				<parameter name="timestamp" value="{timestamp:timestamp}" /> 
			</transform>
			<transform type="include" />
			<transform src="xslt/xml/extract-username.xsl" />
			<transform type="validate" src="rng/message.rng">
				<parameter name="stop-for-warnings" value="true"/>
			</transform>
			<act type="log" src="new message is valid" />
			<transform src="xslt/xml/wrap-for-sourcewriting-and-emailing.xsl">
				<parameter name="path" value="jcr:///teamspaces/{teamspace}/talk/conversations/{conversation}/message{timestamp}.xml"/>
				<parameter name="metapath" value="jcr:///teamspaces/{teamspace}/talk/conversations/{conversation}/meta.xml" />
				<parameter name="queryroot" value="model://TeamQuery#teamspaceById({teamspace}).getUsers()" />
				<parameter name="smtphost" value="{system-property:mindquarry.mail.server}" />
				<parameter name="fromemail" value="{conversation}.{teamspace}@{system-property:mindquarry.mail.server}" />
			</transform>
			<call resource="storeandsendmail" />
			<transform type="bu-redirect" />
			<serialize type="xml" />
		</resource>
		
	</resources>

	<views>
		<view name="xml" from-label="xml">
			<serialize type="xml" />
		</view>
		
		<view name="html" from-label="html">
			<serialize type="xml" />
		</view>
		
		<view name="htmlhtml" from-label="htmlhtml">
			<serialize type="xml" />
		</view>
	</views>

	<pipelines>
		<!-- resources pipeline (external) -->
		<pipeline type="expires-caching">
			<match pattern="css/*.css">
				<select type="resource-exists">
					<when test="css/{1}.css">
						<!-- if it exists, load it from this sitemap's resources -->
						<read src="css/{1}.css" />
					</when>
					<!-- if not, look in the super block -->
					<otherwise>
						<read src="servlet:resources:/css/{1}.css" />
					</otherwise>
				</select>
			</match>
			
			<match pattern="xslt/**.xsl">
				<select type="resource-exists">
					<when test="xslt/{1}.xsl">
						<!-- if it exists, load it from this sitemap's resources -->
						<read src="xslt/{1}.xsl" />
					</when>
					<!-- if not, look in the resources block -->
					<otherwise>
						<read src="servlet:resources:/xslt/{1}.xsl" />
					</otherwise>
				</select>
			</match>

			<match pattern="scripts/*.js">
				<select type="resource-exists">
					<when test="scripts/{1}.js">
						<read src="scripts/{1}.js" />
					</when>
					<otherwise>
						<read src="servlet:resources:/scripts/{1}.js" />
					</otherwise>
				</select>
			</match>

			<match pattern="images/*.*">
				<select type="resource-exists">
					<when test="images/{1}.{2}">
						<read src="images/{1}.{2}" />
					</when>
					<otherwise>
						<read src="servlet:resources:/images/{1}.{2}" />
					</otherwise>
				</select>
			</match>

			<match pattern="buttons/*.*">
				<select type="resource-exists">
					<when test="buttons/{1}_button.{2}">
						<read src="buttons/{1}_button.{2}" />
					</when>
					<otherwise>
						<read src="servlet:resources:/buttons/{1}.{2}" />
					</otherwise>
				</select>
			</match>

			<match pattern="buttons/**.*">
				<read src="servlet:resources:/buttons/{1}.{2}" />
			</match>
			
			<match pattern="icons/*x*/*/*.png">
				<select type="resource-exists">
					<when test="icons/{1}x{2}/{3}/{4}.png">
						<read src="icons/{1}x{2}/{3}/{4}.png" />
					</when>
					<otherwise>
						<read
							src="servlet:resources:/icons/{1}x{2}/{3}/{4}.png" />
					</otherwise>
				</select>
			</match>
			
			<match pattern="tango-icons/**">
				<read
					src="servlet:resources:/tango-icons/{1}" />
			</match>
			
			<!-- @override: for inheriting sitemap resources -->
			<match pattern="resource/**">
				<select type="resource-exists">
					<!-- if it exists, load it from this sitemap's resources -->
					<when test="{1}">
						<read src="{1}" />
					</when>
					<!-- if not, look in the super block -->
					<otherwise>
						<read src="servlet:super:/resource/{1}" />
					</otherwise>
				</select>
			</match>
			
			<handle-errors>
				<call resource="error-handling" />
			</handle-errors>
			
		</pipeline>

		
				
		<pipeline type="caching-point" internal-only="true">
			<match pattern="internal/pipe/*/meta">
				<select type="resource-exists">
					<when test="jcr:///teamspaces/{1}/talk/meta.xml">
						<generate src="jcr:///teamspaces/{1}/talk/meta.xml" />
					</when>
					<otherwise>
						<generate src="xml/team.xml" />
					</otherwise>
				</select>
				<serialize type="xml" />
			</match>
		
			<match pattern="internal/pipe/*/create-new-talk">
				<select type="request-method">
					<when test="GET">
						<generate src="cocoon:/internal/pipe/{1}/meta" />
						<transform src="xslt/html/subscribers2new.xsl">
							<parameter name="userlist" value="model://TeamQuery#teamspaceById({1}).getUsers()" />
							<parameter name="email" value="{1}@{system-property:mindquarry.mail.server}" />
						</transform>
						<transform type="include" />
						<transform src="xslt/html/users2options.xsl" label="html"/>
						<select type="REST">
							
							<when test="html">
								<call resource="layouting" />
							</when>
						</select>
					</when>
					<when test="PUT">
						<generate type="stream">
							<parameter name="defaultContentType" value="text/xml" />
						</generate>
					</when>
					<when test="POST">
						<generate type="jx" src="xml/jx/conversation.xml">
							<parameter name="title" value="{request-param:title}" /> 
						</generate>
					</when>
				</select>
				<transform src="xslt/xml/extract-title-and-prepare-sourcewriting.xsl">
					<parameter name="metaPath" value="cocoon:/internal/pipe/{1}/meta" />
					<parameter name="basePath" value="jcr:///teamspaces/{1}/talk/conversations/" />
				</transform>
				<transform type="include" />
				<transform src="xslt/xml/add-subscribers.xsl" />
				<!-- jx can access the TalkManager component passed by the flowscript -->
				<transform type="jx" />
				<transform type="write-source" />
				<!-- source is written, now post the message -->
				<select type="request-method">
					<when test="POST">
						<transform src="xslt/xml/source2preparedmessage.xsl" />
						<transform type="include" />
						<transform type="jx">
							<parameter name="user" value="{request-attr:username}" />
							<parameter name="body" value="{request-param:body}" />
							<parameter name="timestamp" value="{timestamp:}" />
						</transform>
						<transform src="xslt/xml/wrap-new-for-sourcewriting-and-emailing.xsl">
							<parameter name="timestamp" value="message{date:yyyyMMdd-HHmmss-S}.xml" />
							<parameter name="metapath" value="/meta.xml" />
							<parameter name="queryroot" value="model://TeamQuery#teamspaceById({1}).getUsers()" />
							<parameter name="smtphost" value="{system-property:mindquarry.mail.server}" />
							<parameter name="fromemail" value=".{1}@{system-property:mindquarry.mail.server}" />
							<parameter name="rootpath" value="jcr:///teamspaces/{1}/talk/conversations/" />
						</transform>
						<call resource="storeandsendmail" />
						<transform type="bu-redirect" />
						<serialize type="xml"/>
					</when>
				</select>
				<transform src="xslt/xml/create-bu-redirect.xsl" />
				<select type="REST">
					<when test="html">
						<transform src="xslt/xml/fix-bu-redirect.xsl" />
					</when>
				</select>
				<transform type="bu-redirect" />
				
				<!-- this serializer is not used but needed to have a syntactically correct pipeline -->
				<serialize type="xml" />
			</match>
			
			<match pattern="internal/pipe/*/talk/*/">
				<generate src="cocoon:/internal/pipe/{1}/plaintalk/{2}/" />
				<select type="REST">
					<when test="html">
						<transform type="filter">
							<parameter name="element-name" value="message"/>
							<parameter name="count" value="200"/>
							<parameter name="blocknr" value="{request-param:page}"/>
						</transform>
						<transform src="xslt/xml/messagelist2include.xsl">
							<parameter name="metaPath" value="cocoon:/internal/pipe/{1}/meta/{2}/"/>
							<parameter name="teamPath" value="cocoon:/internal/pipe/{1}/meta"/>
							<parameter name="basePath" value="cocoon:/internal/pipe/{1}/message/{2}/" />
						</transform>
						<transform type="include" />
						<transform src="xslt/html/prepareconversation.xsl" />
						<transform src="xslt/html/conversation2html.xsl">
							<parameter name="now" value="{timestamp:}"/>
							<parameter name="user" value="{request-attr:username}" />
							<parameter name="email" value="{2}.{1}@{system-property:mindquarry.mail.server}" />
						</transform>
						<call resource="layouting" />
					</when>
				</select>
				<serialize type="xml" />
			</match>
			
			<match pattern="internal/pipe/*/plaintalk/*/">
				<select type="resource-exists">
					<when test="jcr:///teamspaces/{1}/talk/conversations/{2}/">
						<generate type="collection" src="jcr:///teamspaces/{1}/talk/conversations/{2}/" />
					</when>
					<otherwise>
						<generate src="xml/empty.xml" />
					</otherwise>
				</select>
				<transform src="xslt/xml/collection2messagelist.xsl">   
					<parameter name="basePath"   
						value="{system-property:mindquarry.server.url}{request:contextPath}{request:servletPath}/" />   
					<parameter name="teamspace" value="{1}" />   
				</transform>
				<serialize type="xml" />
			</match>
			
			<match pattern="internal/pipe/*/meta/*/">
				<select type="resource-exists">
					<when test="jcr:///teamspaces/{1}/talk/conversations/{2}/meta.xml">
						<generate src="jcr:///teamspaces/{1}/talk/conversations/{2}/meta.xml" />
					</when>
					<otherwise>
						<generate src="xml/empty.xml" />
					</otherwise>
				</select>
				<serialize type="xml" />
			</match>
			
			<match pattern="internal/pipe/*/message/*/message*">
				<select type="resource-exists">
					<when test="jcr:///teamspaces/{1}/talk/conversations/{2}/message{3}.xml">
						<generate src="jcr:///teamspaces/{1}/talk/conversations/{2}/message{3}.xml" />
					</when>
					<otherwise>
						<generate src="xml/empty.xml" />
					</otherwise>
				</select>
				<serialize type="xml" />
			</match>
			
			<match pattern="internal/pipe/overview.xml">
				<generate src="servlet:teams:/user/{request-attr:username}/info/teams.xml" />
				<transform src="xslt/xml/teamspaces2conversations.xsl">
					<parameter name="base"
						value="{system-property:mindquarry.server.url}{request:contextPath}{request:servletPath}/" />
				</transform>
				<transform type="xinclude" />
				<transform src="xslt/xml/flatten-conversations-element.xsl" />
				<serialize type="xml" />
			</match>

			<!-- HTML (which is different from the xml content) -->
			<match pattern="internal/pipe/overview.html">
				<generate src="servlet:teams:/user/{request-attr:username}/info/teams.xml" />
				<transform
					src="xslt/html/teamspaces-talk-overview.xsl">
					<parameter name="fullPath"
						value="{block-path:}{request:pathInfo}" />
					<parameter name="sitemapPath"
						value="{request:pathInfo}" />
				</transform>
				<call resource="layouting" />
			</match>
			
		</pipeline>
		
		<!-- =========================================================== -->

		<!-- External browser pipeline with REST -->
		<pipeline type="caching-point">

			<!-- list of teamspaces with the wiki overview (teamspacesWikiOverview) -->
			<match pattern="">
				<select type="REST">
					<when test="html">
						<read src="cocoon:/internal/pipe/overview.html" />
					</when>
					<when test="xml">
						<read src="cocoon:/internal/pipe/overview.xml" />
					</when>
				</select>
			</match>
			
			<!-- Get all conversations -->
			<match pattern="*/">
				<act type="authorise" src="jcr:///teamspaces/{1}/"/>
				<select type="resource-exists">
					<when test="jcr:///teamspaces/{1}/talk/conversations/">
						<generate type="collection" src="jcr:///teamspaces/{1}/talk/conversations/">
						</generate>
						<transform src="xslt/xml/reverse.xsl" label="xml"/>
					</when>
					<otherwise>
						<generate src="xml/empty.xml" />
					</otherwise>
				</select>
				<transform src="xslt/xml/collection2conversationlist.xsl">   
					<parameter name="basePath"   
						value="{system-property:mindquarry.server.url}{request:contextPath}{request:servletPath}/" />   
					<parameter name="teamspace" value="{1}" />   
				</transform>
				<select type="REST">
					<when test="html">
						<transform type="filter">
							<parameter name="element-name" value="conversation"/>
							<parameter name="count" value="10"/>
							<parameter name="blocknr" value="{request-param:page}"/>
						</transform>
						
						
						<transform src="xslt/xml/conversations2include.xsl">
							<parameter name="basePath" value="cocoon:/internal/pipe/{1}" />
							<parameter name="teamPath" value="model://TeamQuery#teamspaceById({1})" />
							<parameter name="metaPath" value="cocoon:/internal/pipe/{1}/meta" />
						</transform>
						
						<transform type="include" />
						
						
						
						<transform src="xslt/xml/messages2include.xsl">
							<parameter name="basePath" value="cocoon:/internal/pipe/{1}" />
						</transform>
						
						
						<transform type="include"  />
						<transform src="xslt/html/prepareconversationlist.xsl"/>
						<transform src="xslt/html/conversationlist2html.xsl"  label="xml">
							<parameter name="now" value="{timestamp:}"/>
							<parameter name="user" value="{request-attr:username}" />
						</transform>
						<call resource="layouting" />
					</when>
					<when test="xml">
						<serialize type="xml" />
					</when>
					<when test="json">
						<transform src="xslt/xml/conversations2include.xsl">
							<parameter name="basePath" value="cocoon:/internal/pipe/{1}" />
							<parameter name="teamPath" value="model://TeamQuery#teamspaceById({1})" />
							<parameter name="metaPath" value="cocoon:/internal/pipe/{1}/meta" />
						</transform>
						<transform type="include" />
						<transform src="xslt/json/conversations2json.xsl" />
						<serialize type="text"/>
					</when>
				</select>
			</match>
			
			<!-- Team metadata -->
			<match pattern="*/meta">
				<act type="authorise" src="jcr:///teamspaces/{1}/"/>
				<select type="request-method">
					<when test="GET">
						<generate src="cocoon:/internal/pipe/{1}/meta" />
					</when>
					<when test="PUT">
						<generate type="stream">
							<parameter name="defaultContentType" value="text/xml" />
						</generate>
						<transform src="xslt/xml/wrap-for-sourcewriting.xsl">
							<parameter name="path" value="jcr:///teamspaces/{1}/talk/meta.xml" />
						</transform>
						<transform type="write-source" />
					</when>
					<when test="POST">
						<generate src="cocoon:/internal/pipe/{1}/meta" />
						<transform src="xslt/xml/meta2subscribeteam.xsl" >
							<parameter name="path" value="jcr:///teamspaces/{1}/talk/meta.xml" />
							<parameter name="subscribe-email" value="{request-param:subscribe-email}" />
							<parameter name="subscribe-jabber" value="{request-param:subscribe-jabber}" />
							<parameter name="unsubscribe-email" value="{request-param:unsubscribe-email}" />
							<parameter name="unsubscribe-jabber" value="{request-param:unsubscribe-jabber}" />
							<parameter name="unsubscribe-all" value="{request-param:unsubscribe-all}" />
						</transform>
						<transform type="write-source" />
						<select type="REST">
							<when test="html">
								<transform src="xslt/xml/create-bu-redirect.xsl">
									<parameter name="to" value="" />
								</transform>
								<transform type="bu-redirect" />
							</when>
						</select>
					</when>
				</select>
				<serialize type="xml" />
			</match>
			
			<!-- Create new conversation -->
			<match pattern="*/new">
				<act type="authorise" src="jcr:///teamspaces/{1}/"/>
				<call function="withTalkManager">
					<parameter name="target" value="internal/pipe/{1}/create-new-talk"/>
				</call>
			</match>
			
			<!-- Conversation metadata -->
			<match pattern="*/*/meta">
				<act type="authorise" src="jcr:///teamspaces/{1}/"/>
				<select type="request-method">
					<when test="GET">
						<generate src="cocoon:/internal/pipe/{1}/meta/{2}/" />
					</when>
					<when test="PUT">
						<generate type="stream">
							<parameter name="defaultContentType" value="text/xml" />
						</generate>
						<transform src="xslt/xml/wrap-for-sourcewriting.xsl">
							<parameter name="path" value="jcr:///teamspaces/{1}/talk/conversations/{2}/meta.xml" />
						</transform>
						<transform type="write-source" />
					</when>
					<when test="POST">
						<generate src="jcr:///teamspaces/{1}/talk/conversations/{2}/meta.xml" />
						<transform src="xslt/xml/meta2subscribeconversation.xsl" >
							<parameter name="path" value="jcr:///teamspaces/{1}/talk/conversations/{2}/meta.xml" />
							<parameter name="subscribe-email" value="{request-param:subscribe-email}" />
							<parameter name="subscribe-jabber" value="{request-param:subscribe-jabber}" />
							<parameter name="unsubscribe-email" value="{request-param:unsubscribe-email}" />
							<parameter name="unsubscribe-jabber" value="{request-param:unsubscribe-jabber}" />
							<parameter name="unsubscribe-all" value="{request-param:unsubscribe-all}" />
						</transform>
						<transform type="write-source" />
						<select type="REST">
							<when test="html">
								<transform src="xslt/xml/create-bu-redirect.xsl">
									<parameter name="to" value="" />
								</transform>
								<transform type="bu-redirect" />
							</when>
						</select>
					</when>
				</select>
				<serialize type="xml" />
			</match>
			
			<!-- Get one message -->
			<match pattern="*/*/message*">
				<act type="authorise" src="jcr:///teamspaces/{1}/"/>
				<generate src="cocoon:/internal/pipe/{1}/message/{2}/message{3}" />
				<serialize type="xml" />
			</match>
			
			<!-- Get all messages from a conversation -->
			<match pattern="*/*/">
				<act type="authorise" src="jcr:///teamspaces/{1}/"/>
				<read src="cocoon:/internal/pipe/{1}/talk/{2}/" />
			</match>
			
			<!-- Append new message -->
			<match pattern="*/*/new">
				<act type="authorise" src="jcr:///teamspaces/{1}/"/>
				<call resource="create-new-message">
					<parameter name="teamspace" value="{1}" />
					<parameter name="conversation" value="{2}" />
					<parameter name="timestamp" value="{date:yyyyMMdd-HHmmss-S}" />
				</call>
			</match>
			
			<handle-errors>
				<call resource="error-handling" />
			</handle-errors>
		</pipeline>

		
	</pipelines>

</sitemap>

