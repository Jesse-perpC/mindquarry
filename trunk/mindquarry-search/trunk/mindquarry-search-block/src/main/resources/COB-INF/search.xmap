<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (C) 2006-2007 Mindquarry GmbH, All Rights Reserved
	
	The contents of this file are subject to the Mozilla Public License
	Version 1.1 (the "License"); you may not use this file except in
	compliance with the License. You may obtain a copy of the License at
	http://www.mozilla.org/MPL/
	
	Software distributed under the License is distributed on an "AS IS"
	basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
	License for the specific language governing rights and limitations
	under the License.
-->
<sitemap xmlns="http://apache.org/cocoon/sitemap/1.0">
	<components>
		<actions>
			<action name="log" src="com.mindquarry.webapp.acting.DebugLogAction"/>
		</actions>

		<serializers>
			<serializer name="jnlp" src="org.apache.cocoon.serialization.XMLSerializer"
				mime-type="application/x-java-jnlp-file"/>
		</serializers>

		<selectors>
			<selector name="lightbox-request"
				src="com.mindquarry.webapp.ajax.LightboxRequestSelector"/>
			<selector name="ajax-request" src="org.apache.cocoon.ajax.AjaxRequestSelector"/>
			<selector name="request-parameter" src="org.apache.cocoon.selection.RequestParameterSelector"/>
		</selectors>

		<transformers>
			<transformer name="browser-update" src="org.apache.cocoon.ajax.BrowserUpdateTransformer"
			/>
		</transformers>
	</components>

	<resources>
		<resource name="form2html">
			<transform type="i18n"/>
			<transform src="servlet:super:/xslt/forms/form2html.xsl"
				label="form">
				<parameter name="fullPath"
					value="{block-path:}{request:pathInfo}" />
				<parameter name="sitemapPath"
					value="{request:pathInfo}" />
			</transform>
		</resource>
		
		<!-- general resource called upon errors (in each external pipeline
			 below), calls error-layouting pipeline for styling -->
		<resource name="error-handling">
			<select type="exception">
				<when test="authorisation">
					<!-- non-authorised should be 404 resource not found -->
					<generate type="notifying"/>
					<call resource="error-layouting">
						<parameter name="pageTitle" value="Sorry, not authorized"/>
						<parameter name="httpStatus" value="404"/>
					</call>
				</when>
				<when test="resource-does-not-exist">
					<generate type="notifying"/>
					<call resource="error-layouting">
						<parameter name="pageTitle" value="Sorry, resource was not found"/>
						<parameter name="httpStatus" value="404"/>
					</call>
				</when>
				<otherwise>
					<generate type="notifying"/>
					<call resource="error-layouting">
						<parameter name="pageTitle" value="Sorry, internal system error"/>
						<parameter name="httpStatus" value="500"/>
					</call>
				</otherwise>
			</select>			
		</resource>
		
		<resource name="error2html">
			<transform src="servlet:super:/xslt/error/error2html.xsl">
				<parameter name="pageTitle" value="{pageTitle}"/>			
				<parameter name="httpStatus" value="{httpStatus}"/>
				
				<parameter name="fullPath"
					value="{block-path:}{request:pathInfo}" />
				<parameter name="serverBasePath" 
					value="{system-property:mindquarry.server.url}{request:contextPath}" />
				
				<parameter name="artifactId"
					value="{pom-property:com.mindquarry.search/mindquarry-search-block/artifactId}"/>							
				<parameter name="version"
					value="{pom-property:com.mindquarry.search/mindquarry-search-block/version}"/>							
				<parameter name="timeStamp"
					value="{pom-property:com.mindquarry.search/mindquarry-search-block/timeStamp}"/>							
			</transform>			
		</resource>
		
		<resource name="html2lightbox">
			<transform src="servlet:/xslt/html2lightbox.xsl">
				<parameter name="serverBasePath" 
					value="{system-property:mindquarry.server.url}{request:contextPath}" />
				<parameter name="username"
					value="{request-attr:username}" />
				<parameter name="fullPath"
					value="{block-path:}{request:pathInfo}" />
				<parameter name="ajaxType"
					value="{request-param:ajaxType}"/>
				<parameter name="serverTitle"
					value="{system-property:mindquarry.title}" />
			</transform>
		</resource>
		
		<resource name="html2html">
			<transform src="servlet:/xslt/html2html.xsl">
				<parameter name="fullPath"
					value="{block-path:}{request:pathInfo}" />
				<parameter name="sitemapPath"
					value="{request:pathInfo}" />
				<parameter name="serverBasePath" 
					value="{system-property:mindquarry.server.url}{request:contextPath}" />
				<parameter name="username"
					value="{request-attr:username}" />
				<parameter name="serverTitle"
					value="{system-property:mindquarry.title}" />
				
				<parameter name="artifactId"
					value="{pom-property:com.mindquarry.search/mindquarry-search-block/artifactId}"/>							
				<parameter name="version"
					value="{pom-property:com.mindquarry.search/mindquarry-search-block/version}"/>							
				<parameter name="timeStamp"
					value="{pom-property:com.mindquarry.search/mindquarry-search-block/timeStamp}"/>							
			</transform>			
		</resource>
		
		<!-- shows styled error page and sets http status code on serializers -->
		<resource name="error-layouting">
			<select type="REST">
				<when test="html">
					<call resource="error2html">
						<parameter name="pageTitle" value="{pageTitle}"/>
						<parameter name="httpStatus" value="{httpStatus}"/>
					</call>
					
					<!-- only apply full html2html styling on normal page view -->
					<select type="ajax-request">
						<when test="false">
							<select type="lightbox-request">
								<when test="false">
									<call resource="html2html" />
								</when>
							</select>
						</when>
					</select>
					<serialize type="html" status-code="{httpStatus}"/>
				</when>
				<when test="xml">
					<!-- directly output cocoon's error xml for xml clients -->
					<serialize type="xml" status-code="{httpStatus}"/>
				</when>
			</select>
		</resource>
		
		<!-- standard final page layouting -->
		<resource name="layouting">
			<select type="lightbox-request">
				<when test="true">
					<call resource="html2lightbox" />
					<transform type="teamspace" />
					<transform type="cinclude"/>
					<serialize type="xml"/>
				</when>
				<otherwise>
					<call resource="html2html" />
					<transform type="teamspace" />
					<transform type="cinclude"/>
				</otherwise>
			</select>
			
			<!-- check AJAX request attribute -->
			<select type="ajax-request">
				<when test="true">
					<select type="request-parameter">
						<parameter name="parameter-name" value="dojo.transport"/>
						<when test="iframe">
							<transform src="resource://org/apache/cocoon/forms/resources/IframeTransport-bu-styling.xsl"/>
							<serialize type="xhtml"/><!-- this is REALLY important -->
						</when>
						<otherwise>
							<serialize type="xml"/>
						</otherwise>
					</select>
				</when> 
				<otherwise>
					<serialize type="html"/>
				</otherwise>
			</select>
		</resource>
		
	</resources>

	<views>
		<view name="xml" from-label="xml">
			<serialize type="xml" />
		</view>
		<view name="html" from-label="html">
			<serialize type="xml" />
		</view>
	</views>
	
	<pipelines>
		<!-- resources pipeline / use noncaching for debugging -->
		<pipeline type="noncaching">
			<match pattern="css/*.css">
				<select type="resource-exists">
					<when test="css/{1}.css">
						<!-- if it exists, load it from this sitemap's resources -->
						<read src="css/{1}.css"/>
					</when>
					<!-- if not, look in the super block -->
					<otherwise>
						<read src="servlet:super:/css/{1}.css"/>
					</otherwise>
				</select>
			</match>

			<match pattern="xslt/*.xsl">
				<select type="resource-exists">
					<when test="xslt/{1}.xsl">
						<!-- if it exists, load it from this sitemap's resources -->
						<read src="xslt/{1}.xsl"/>
					</when>
					<!-- if not, look in the resources block -->
					<otherwise>
						<read src="servlet:super:/xslt/{1}.xsl"/>
					</otherwise>
				</select>
			</match>

			<match pattern="scripts/*.js">
				<select type="resource-exists">
					<when test="scripts/{1}.js">
						<read src="scripts/{1}.js"/>
					</when>
					<otherwise>
						<read src="servlet:super:/scripts/{1}.js"/>
					</otherwise>
				</select>
			</match>

			<match pattern="images/status/*.png">
				<select type="resource-exists">
					<when test="images/status/{1}.png">
						<read src="images/status/{1}.png"/>
					</when>
					<otherwise>
						<read src="images/status/done.png"/>
					</otherwise>
				</select>
			</match>

			<match pattern="images/*.*">
				<select type="resource-exists">
					<when test="images/{1}.{2}">
						<read src="images/{1}.{2}"/>
					</when>
					<otherwise>
						<read src="servlet:welcome:/{1}.{2}"/>
					</otherwise>
				</select>
			</match>

			<match pattern="buttons/*.*">
				<select type="resource-exists">
					<when test="buttons/{1}_button.{2}">
						<read src="buttons/{1}_button.{2}"/>
					</when>
					<otherwise>
						<read src="servlet:super:/buttons/{1}.{2}"/>
					</otherwise>
				</select>
			</match>

			<match pattern="icons/*x*/*/*.png">
				<select type="resource-exists">
					<when test="icons/{1}x{2}/{3}/{4}.png">
						<read src="icons/{1}x{2}/{3}/{4}.png"/>
					</when>
					<otherwise>
						<read src="servlet:super:/icons/{1}x{2}/{3}/{4}.png"/>
					</otherwise>
				</select>
			</match>
		</pipeline>
		
		<!-- search form pipeline -->
		<pipeline>
			<match pattern="">
				<generate src="forms/search-form-template.xml" label="xml"/>
				<call resource="layouting" />
			</match>
			
			<match pattern="query">
				<!-- FIXME: use the "server:" url for this, not http, this way we don't need the password -->
				<generate src="{request:scheme}://{request-attr:username}:{request-attr:password}@{request:serverName}:{request:serverPort}{request:contextPath}/solr-select/?wt=xml&amp;indent=true&amp;fl=score&amp;q={url-encode:{request-param:q}}&amp;fq={url-encode:{request-param:fq}}&amp;start={request-param:start}&amp;facet=true&amp;facet.field=type&amp;facet.field=team" label="xml"/>
				<transform src="xslt/searchresults2html.xsl" label="html">
					<parameter name="query" value="{request-param:q}" />
					<parameter name="start" value="{request-param:start}" />
					<parameter name="fq" value="{request-param:fq}" />
				</transform>
				<call resource="layouting" />
			</match>

			<!-- quick search demo -->
			<match pattern="quick">
				<generate src="pages/quick-search.xml"/>
				<call resource="layouting"/>			
			</match>
		</pipeline>

		<pipeline internal-only="true">
			<match pattern="internal/forms/*.xml">
				<generate type="jx" src="forms/{1}.xml"/>
				<transform type="browser-update"/>
				<call resource="form2html"/>
				<call resource="layouting"/>
			</match>
		</pipeline>

		<pipeline>
			<!--+
			| forward any unknown stuff to the super block 
			| NOTE: This must be the last matcher!
			+-->
			<match pattern="**">
				<read src="servlet:super:/{1}"/>
			</match>
		</pipeline>
	</pipelines>
</sitemap>
