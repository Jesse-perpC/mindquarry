<?xml version="1.0" encoding="UTF-8"?>

<!--
	Copyright (C) 2006-2007 Mindquarry GmbH, All Rights Reserved
	
	The contents of this file are subject to the Mozilla Public License
	Version 1.1 (the "License"); you may not use this file except in
	compliance with the License. You may obtain a copy of the License at
	http://www.mozilla.org/MPL/
	
	Software distributed under the License is distributed on an "AS IS"
	basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
	License for the specific language governing rights and limitations
	under the License.
-->

<sitemap xmlns="http://apache.org/cocoon/sitemap/1.0" xmlns:map="http://apache.org/cocoon/sitemap/1.0">
	<components>
	    <input-modules>
			<input-module name="teamnamedigest" class="com.mindquarry.webapp.modules.DigestStringModule">
				<maxvalue>3</maxvalue>
			</input-module>
	    </input-modules>
		  
		<readers>
			<reader logger="imageop" name="image-op-crop-resize" src="org.apache.cocoon.reading.imageop.ImageOpReader" >
				<effects>
					<op type="crop" prefix="crop-" />
					<op type="resize" prefix="size-" />
				</effects>
			</reader>
		</readers>
		
		<actions>
			<action name="setnohttpcache"
				src="org.apache.cocoon.acting.HttpCacheAction">
				<seconds>0</seconds>
			</action>
		</actions>

		<selectors>
			<selector name="REST"
				src="org.apache.cocoon.selection.RegexpHeaderSelector">
				<header-name>accept</header-name>
				<pattern name="html">application/xhtml\+xml|text/html|\*/\*</pattern>
				<pattern name="xml">text/xml</pattern>
			</selector>
		</selectors>
	</components>

	<views>
		<view name="content" from-label="content">
			<serialize type="xml" />
		</view>

		<view name="html" from-label="html">
			<serialize type="xml" />
		</view>

		<view name="form" from-label="form">
			<serialize type="xml" />
		</view>
		
		<view name="step1" from-label="step1">
			<serialize type="xml" />
		</view>
		
		<view name="step2" from-label="step2">
			<serialize type="xml" />
		</view>
		
		<view name="step3" from-label="step3">
			<serialize type="xml" />
		</view>
	</views>

	<flow language="javascript">
		<script src="flows/teamspaces.js" />
		<script src="flows/users.js" />
		<script src="flows/edit-members.js" />
		<script src="flows/edit-user.js" />
	</flow>

	<resources>
		<resource name="form2html">
			<transform type="i18n"/>
			<transform src="servlet:super:/xslt/forms/form2html.xsl"
				label="form">
				<parameter name="fullPath"
					value="{block-path:}{request:pathInfo}" />
				<parameter name="sitemapPath"
					value="{request:pathInfo}" />
			</transform>
		</resource>
		
		<!-- general resource called upon errors (in each external pipeline
			 below), calls error-layouting pipeline for styling -->
		<resource name="error-handling">
			<select type="exception">
				<when test="authorisation">
					<!-- non-authorised should be 404 resource not found -->
					<generate type="notifying"/>
					<call resource="error-layouting">
						<parameter name="pageTitle" value="Sorry, not authorized"/>
						<parameter name="httpStatus" value="404"/>
					</call>
				</when>
				<when test="resource-does-not-exist">
					<generate type="notifying"/>
					<call resource="error-layouting">
						<parameter name="pageTitle" value="Sorry, resource was not found"/>
						<parameter name="httpStatus" value="404"/>
					</call>
				</when>
				<otherwise>
					<generate type="notifying"/>
					<call resource="error-layouting">
						<parameter name="pageTitle" value="Sorry, internal system error"/>
						<parameter name="httpStatus" value="500"/>
					</call>
				</otherwise>
			</select>			
		</resource>
		
		<resource name="error2html">
			<transform src="servlet:super:/xslt/error/error2html.xsl">
				<parameter name="pageTitle" value="{pageTitle}"/>			
				<parameter name="httpStatus" value="{httpStatus}"/>
				
				<parameter name="fullPath"
					value="{block-path:}{request:pathInfo}" />
				<parameter name="serverBasePath" 
					value="{system-property:mindquarry.server.url}{request:contextPath}" />
				
				<parameter name="artifactId"
					value="{pom-property:com.mindquarry.teamspace/mindquarry-teamspace-block/artifactId}"/>							
				<parameter name="version"
					value="{pom-property:com.mindquarry.teamspace/mindquarry-teamspace-block/version}"/>							
				<parameter name="timeStamp"
					value="{pom-property:com.mindquarry.teamspace/mindquarry-teamspace-block/timeStamp}"/>							
			</transform>			
		</resource>
		
		<resource name="html2lightbox">
			<transform src="servlet:/xslt/html2lightbox.xsl">
				<parameter name="serverBasePath" 
					value="{system-property:mindquarry.server.url}{request:contextPath}" />
				<parameter name="username"
					value="{request-attr:username}" />
				<parameter name="fullPath"
					value="{block-path:}{request:pathInfo}" />
				<parameter name="ajaxType"
					value="{request-param:ajaxType}"/>
				<parameter name="serverTitle"
					value="{system-property:mindquarry.title}" />
			</transform>
		</resource>
		
		<resource name="html2html">
			<transform src="servlet:/xslt/html2html.xsl">
				<parameter name="fullPath"
					value="{block-path:}{request:pathInfo}" />
				<parameter name="sitemapPath"
					value="{request:pathInfo}" />
				<parameter name="serverBasePath" 
					value="{system-property:mindquarry.server.url}{request:contextPath}" />
				<parameter name="username"
					value="{request-attr:username}" />
				<parameter name="serverTitle"
					value="{system-property:mindquarry.title}" />
				
				<parameter name="artifactId"
					value="{pom-property:com.mindquarry.teamspace/mindquarry-teamspace-block/artifactId}"/>							
				<parameter name="version"
					value="{pom-property:com.mindquarry.teamspace/mindquarry-teamspace-block/version}"/>							
				<parameter name="timeStamp"
					value="{pom-property:com.mindquarry.teamspace/mindquarry-teamspace-block/timeStamp}"/>							
			</transform>			
		</resource>
		
		<!-- shows styled error page and sets http status code on serializers -->
		<resource name="error-layouting">
			<select type="REST">
				<when test="html">
					<call resource="error2html">
						<parameter name="pageTitle" value="{pageTitle}"/>
						<parameter name="httpStatus" value="{httpStatus}"/>
					</call>
					
					<!-- only apply full html2html styling on normal page view -->
					<select type="ajax-request">
						<when test="false">
							<select type="lightbox-request">
								<when test="false">
									<call resource="html2html" />
								</when>
							</select>
						</when>
					</select>
					<serialize type="html" status-code="{httpStatus}"/>
				</when>
				<when test="xml">
					<!-- directly output cocoon's error xml for xml clients -->
					<serialize type="xml" status-code="{httpStatus}"/>
				</when>
			</select>
		</resource>
		
		<!-- standard final page layouting -->
		<resource name="layouting">
			<transform type="teamspace" />
			<select type="lightbox-request">
				<when test="true">
					<call resource="html2lightbox" />
					<transform type="cinclude"/>
					<serialize type="xml"/>
				</when>
				<otherwise>
					<call resource="html2html" />
					<transform type="cinclude"/>
				</otherwise>
			</select>
			
			<!-- check AJAX request attribute -->
			<select type="ajax-request">
				<when test="true">
					<select type="request-parameter">
						<parameter name="parameter-name" value="dojo.transport"/>
						<when test="iframe">
							<transform src="resource://org/apache/cocoon/forms/resources/IframeTransport-bu-styling.xsl"/>
							<serialize type="xhtml"/><!-- this is REALLY important -->
						</when>
						<otherwise>
							<serialize type="xml"/>
						</otherwise>
					</select>
				</when> 
				<otherwise>
					<serialize type="html"/>
				</otherwise>
			</select>
		</resource>
	</resources>

	<pipelines>

		<pipeline type="caching-point" internal-only="true">
			
			<match pattern="*.instance">
				<generate type="jx" src="forms/{1}-template.xml" label="content">
					<parameter name="locale"
						value="{flow-attribute:locale}" />
					<parameter name="serverContextURL"
						value="{system-property:mindquarry.server.url}{request:contextPath}{block-path:}/" />
				</generate>
				<transform type="browser-update" />
				<call resource="form2html" />
				<call resource="layouting" />
			</match>
						
		</pipeline>

		<!-- external browser pipeline -->
		<pipeline type="caching-point">
			<!--<parameter name="expires" value="access plus 1 minutes"/>-->
						
			<!-- teamspace list -->
			<match pattern="">
			
				<generate src="model://TeamQuery#teamspacesForUser({request-attr:username})"
					 />
				
				<transform src="xslt/includeMembersForTeamspace.xsl" />
				<transform type="include" label="content"/>
				
				<!-- check request type: REST / HTML or other -->
				<select type="REST">
								
					<!-- handle HTML request -->
					<when test="html">				
						<transform src="xslt/html/teamspaces2html.xsl"
							label="html">
							<parameter name="username"
								value="{request-attr:username}" />
							<parameter name="fullPath"
								value="{block-path:}{request:pathInfo}" />
							<parameter name="sitemapPath"
								value="{request:pathInfo}" />
								
							<parameter name="blockPath" value="{block-path:}" />
							<parameter name="serverBaseUrl" 
								value="{system-property:mindquarry.server.url}{request:contextPath}" />
						</transform>
						
						<call resource="form2html" />
						<call resource="layouting" />
					</when>
					
					<!-- handle REST request -->
					<!-- used by desktop client to get informed about the teamspaces for the user --> 
					<when test="xml">
						<transform src="xslt/xml/teamspaces2xml.xsl">
							<parameter name="basePath"
								value="{system-property:mindquarry.server.url}{request:contextPath}{request:servletPath}/" />
						</transform>
						<serialize type="xml" />
					</when>
					<otherwise>
						<transform src="xslt/json/teamspaces2json.xsl">
							<parameter name="query" value="{request-param:q}"></parameter>
							<parameter name="basePath" value="{system-property:mindquarry.server.url}{request:contextPath}{request:servletPath}/" />
						</transform>
						<serialize type="text" />
					</otherwise>
				</select>
			</match>
			
			<!-- user with name and all his teams with all their users and full user info -->
			<match pattern="user/*/info/teams.xml">
							
				<generate src="model://TeamQuery#teamspacesForUser({1})"
					label="content" />
				
				<transform src="xslt/includeUserDetails.xsl" >
					<parameter name="username" value="{1}" />
				</transform>
				<transform type="include" />
				
				<transform src="xslt/includeMembersForTeamspace.xsl" />
				<transform type="include" />
				
				<serialize type="xml" />				
			</match>
			
			
			
			<match pattern="team/">			
				<generate type="jx" src="servlet:resources:/jx/redirect-browserupdate.jx">
					<parameter name="uri" value=".." />
				</generate>
				
				<!-- generate JX bu:redirect no matter what we're going to serve.
					then serialize directly to xml or do transformation to hard http redirect 
					depending on wheter we requested via ajax or not -->					
				<select type="lightbox-request">
					<when test="true">					
						<serialize type="xml" />
					</when>
					<otherwise>
						<transform type="bu-redirect" />
						<serialize type="xml" />
					</otherwise>
				</select>
			</match>
			
			
			<!-- internal, will provide a browser-update xml snippet with
				 a redirect action -->
			<match pattern="redirectTo/**">
				<generate type="jx" src="servlet:resources:/jx/redirect-browserupdate.jx">
					<parameter name="uri" value="{1}" />
				</generate>
				
				<!-- generate JX bu:redirect no matter what we're going to serve.
					then serialize directly to xml or do transformation to hard http redirect 
					depending on wheter we requested via ajax or not -->					
				<select type="lightbox-request">
					<when test="true">					
						<serialize type="xml" />
					</when>
					<otherwise>
						<transform type="bu-redirect" />
						<serialize type="xml" />
					</otherwise>
				</select>
			</match>
			
			<!-- single teamspace details -->
			<match pattern="team/*/">				
				<generate src="model://TeamQuery#teamspaceById({1})" label="content" />
								
				<transform src="xslt/includeMembersForTeamspace.xsl" />
				<transform type="include" />
						
				<select type="REST">
					<when test="html">
						<transform src="xslt/html/teamspace2html.xsl" label="html">
							<parameter name="username" value="{request-attr:username}" />								
							<parameter name="blockPath" value="{block-path:}" />
							<parameter name="serverBaseUrl" 
								value="{system-property:mindquarry.server.url}{request:contextPath}" />
						</transform>
						
						<call resource="form2html" />
						<call resource="layouting" />
						
						<serialize type="html" />
					</when>
					
					<!--  handle REST request -->
					<when test="xml">
						<transform src="xslt/xml/teamspace2xml.xsl">
							<parameter name="reposURI"
								value="{system-property:mindquarry.repos.uri}" />
							<parameter name="basePath"
								value="{system-property:mindquarry.server.url}{request:contextPath}{request:servletPath}/team/{1}/" />
						</transform>
						
						<serialize type="xml" />
					</when>
					<otherwise>
						<transform src="xslt/json/users2json.xsl">
							<parameter name="basePath" value="{system-property:mindquarry.server.url}{request:contextPath}{request:servletPath}"/>
							<parameter name="query" value="{request-param:q}" />
						</transform>
						<serialize type="text" />
					</otherwise>
				</select>
			</match>
			
			<match pattern="*/members/asFormsSelectionlist">
				<generate src="model://model://TeamQuery#teamspaceById({1}).getUsers()" />
				<transform src="xslt/teamMembers2formsSelectionlist.xsl" />
				<serialize type="xml" />
			</match>
			
			<match pattern="team/*/editMembers/">
				<call function="handleForm">
					<parameter name="function"
						value="processEditMembersForm" />
					<parameter name="redirectURL"
						value="{system-property:mindquarry.server.url}{request:contextPath}{block-path:}/" />
					<parameter name="definitionURI"
						value="forms/edit-members-form.xml" />
					<parameter name="teamId" value="{1}" />
				</call>
			</match>
			
			<!-- used in teamspace detail view -->
			<match pattern="team/*/editMembersFromDetailsView/">
				<call function="handleForm">
					<parameter name="function"
						value="processEditMembersForm" />
					<parameter name="redirectURL"
						value="{system-property:mindquarry.server.url}{request:contextPath}{block-path:}/team/{1}/" />
					<parameter name="definitionURI"
						value="forms/edit-members-form.xml" />
					<parameter name="teamId" value="{1}" />
				</call>
			</match>

			<!-- creating users and teamspace / use noncaching pipeline -->
			<match pattern="createUser/">
				<call function="handleForm">
					<parameter name="function"
						value="processCreateUser" />
					<parameter name="definitionURI"
						value="forms/edit-members-form.xml" />
					<parameter name="username"
						value="{request-attr:username}" />
					<parameter name="redirectURL" 
						value=".." />
				</call>
			</match>
			
			<!--<match pattern="*/createUserFromDetailsView/">
				<call function="handleForm">
					<parameter name="function"
						value="processCreateUser" />
					<parameter name="definitionURI"
						value="forms/edit-members-form.xml" />
					<parameter name="username"
						value="{request-attr:username}" />
					<parameter name="redirectURL" 
						value="{system-property:mindquarry.server.url}{request:contextPath}{block-path:}/team/{1}/" />
				</call>
			</match>-->
			
			<match pattern="editUser/">
				<call function="handleForm">
					<parameter name="function"
						value="processEditUser" />
					<parameter name="definitionURI"
						value="forms/edit-user-form.xml" />
					<parameter name="username"
						value="{request-attr:username}" />
				</call>
			</match>

			<match pattern="createTeamspace/">
				<call function="handleForm">
					<parameter name="function"
						value="processCreateTeamspaceForm" />
					<parameter name="definitionURI"
						value="forms/teamspace-form.xml" />
					<parameter name="username"
						value="{request-attr:username}" />
					<parameter name="redirectURL" 
						value="{system-property:mindquarry.server.url}{request:contextPath}{block-path:}/" />
				</call>
			</match>

			<match pattern="*/edit/">
				<call function="handleForm">
					<parameter name="function"
						value="processEditTeamspaceForm" />
					<parameter name="definitionURI"
						value="forms/teamspace-form.xml" />
					<parameter name="username"
						value="{request-attr:username}" />
					<parameter name="teamspaceId" value="{1}" />
					<parameter name="redirectURL" 
						value="{system-property:mindquarry.server.url}{request:contextPath}{block-path:}/team/{1}/" />				
				</call>
			</match>
			
			<!-- used in teamspace detail view -->
			<!--<match pattern="*/editFromDetailsView/">
				<call function="handleForm">
					<parameter name="function"
						value="processEditTeamspaceForm" />
					<parameter name="definitionURI"
						value="forms/teamspace-form.xml" />
					<parameter name="username"
						value="{request-attr:username}" />
					<parameter name="teamspaceId" value="{1}" />
					<parameter name="redirectURL" 
						value="{system-property:mindquarry.server.url}{request:contextPath}{block-path:}/team/{1}/" />
				</call>
			</match>-->
			
			
			<match pattern="portlets/*/*/meta">
				<generate src="portlets/{1}.xml" />
				<serialize type="xml" />
			</match>
			
			<match pattern="portlets/teamswitcher/*/view">
				<generate src="model://TeamQuery#teamspacesForUser({1})" />
				<transform src="xslt/portlet/teams2portlet.xsl" />
				<serialize type="xml"></serialize>
			</match>

			<!-- Continue a scenario. The continuation id is passed in the URL
				(typically used for GET requests) -->
			<match pattern="**/*.continue">
				<act type="setnohttpcache" />
				<call continuation="{2}" />
			</match>
			<match pattern="*.continue">
				<act type="setnohttpcache" />
				<call continuation="{1}" />
			</match>

			<handle-errors>
				<call resource="error-handling" />
			</handle-errors>
						
		</pipeline>

		<!-- external browser pipeline -->
		<pipeline type="caching-point">
			<match pattern="users/*">
				<select type="REST">
					<when test="xml">
						<select type="request-method">
							<when test="DELETE">
								<call function="deleteUser">
									<parameter name="userId" value="{1}" />
								</call>
							</when>
						</select>
					</when>
				</select>
			</match>
		</pipeline>
		
		<!-- user/team image pipeline -->
		<!-- Note: images can change due to uploads, thus no expires-caching! -->
		<pipeline type="caching"><!-- eg. users/[size]/[name].[type] -->
			<match pattern="users/*/*.*">
				<select type="resource-exists">
					<!-- Note: image op will set the mime type / http content type -->
					<when test="jcr:///users/photos/{2}.{3}">
						<read type="image-op-crop-resize" src="jcr:///users/photos/{2}.{3}">
							<parameter name="crop-ratio" value="1"/>
							<parameter name="size-width" value="{1}"/>
							<parameter name="size-height" value="{1}"/>
							<parameter name="output-format" value="{3}"/>
						</read>
					</when>
					<when test="jcr:///users/photos/{2}.png">
						<read type="image-op-crop-resize" src="jcr:///users/photos/{2}.png">
							<parameter name="crop-ratio" value="1"/>
							<parameter name="size-width" value="{1}"/>
							<parameter name="size-height" value="{1}"/>
							<parameter name="output-format" value="{3}"/>
						</read>
					</when>
					<when test="jcr:///users/photos/{2}.gif">
						<read type="image-op-crop-resize" src="jcr:///users/photos/{2}.gif">
							<parameter name="crop-ratio" value="1"/>
							<parameter name="size-width" value="{1}"/>
							<parameter name="size-height" value="{1}"/>
							<parameter name="output-format" value="{3}"/>
						</read>
					</when>
					<when test="jcr:///users/photos/{2}.jpg">
						<read type="image-op-crop-resize" src="jcr:///users/photos/{2}.jpg">
							<parameter name="crop-ratio" value="1"/>
							<parameter name="size-width" value="{1}"/>
							<parameter name="size-height" value="{1}"/>
							<parameter name="output-format" value="{3}"/>
						</read>
					</when>
					<when test="jcr:///users/photos/{2}.bmp">
						<read type="image-op-crop-resize" src="jcr:///users/photos/{2}.bmp">
							<parameter name="crop-ratio" value="1"/>
							<parameter name="size-width" value="{1}"/>
							<parameter name="size-height" value="{1}"/>
							<parameter name="output-format" value="{3}"/>
						</read>
					</when>
					<otherwise>
						<read type="image-op-crop-resize" src="images/anonymous-user.png" >
							<parameter name="crop-ratio" value="1"/>
							<parameter name="size-width" value="{1}"/>
							<parameter name="size-height" value="{1}"/>
							<parameter name="output-format" value="{3}"/>
						</read>
					</otherwise>
				</select>
			</match>
			
			<match pattern="users/*.png">
				<read src="cocoon:/users/48/{1}.png"/>
			</match>
			
			<match pattern="*.22.png">
				<read src="cocoon:/tango-icons/22/emblems/team-{teamnamedigest:100:{1}}.png" />
			</match>
			
			<match pattern="*.png">
				<read src="cocoon:/tango-icons/48/emblems/team-{teamnamedigest:100:{1}}.png" />
			</match>
			
			<match pattern="*.*.png">
				<read type="image-op-resize" src="cocoon:/{1}.png">
					<parameter name="size-width" value="{2}"/>
					<parameter name="size-height" value="{2}"/>
					<parameter name="output-format" value="png"/>
				</read>
			</match>
			
			<match pattern="*.png">
				<read src="cocoon:/tango-icons/48/emblems/team-{teamnamedigest:100:{1}}.png" />
			</match>
			
			<handle-errors>
				<call resource="error-handling" />
			</handle-errors>
			
		</pipeline>
		
		<!-- resources pipeline -->
		<!-- changed to **css/ because of absolute links in lightboxes -->
		<!-- http://server/teams/team/teamspacename/css/teamspace.css -->
		<pipeline type="caching">
			<match pattern="**css/*.css">
				<select type="resource-exists">
					<when test="css/{2}.css">
						<!-- if it exists, load it from this sitemap's resources -->
						<read src="css/{2}.css" />
					</when>
					<!-- if not, look in the super block -->
					<otherwise>
						<read src="servlet:super:/css/{2}.css" />
					</otherwise>
				</select>
			</match>
			
			<match pattern="xslt/*.xsl">
				<select type="resource-exists">
					<when test="xslt/{1}.xsl">
						<!-- if it exists, load it from this sitemap's resources -->
						<read src="xslt/{1}.xsl" />
					</when>
					<!-- if not, look in the super block -->
					<otherwise>
						<read src="servlet:super:/xslt/{1}.xsl" />
					</otherwise>
				</select>
			</match>
			
			<match pattern="scripts/*.js">
				<select type="resource-exists">
					<when test="scripts/{1}.js">
						<read src="scripts/{1}.js" />
					</when>
					<otherwise>
						<read src="servlet:super:/scripts/{1}.js" />
					</otherwise>
				</select>
			</match>
			
			<match pattern="images/*.*">
				<select type="resource-exists">
					<when test="images/{1}.{2}">
						<read src="images/{1}.{2}" />
					</when>
					<otherwise>
						<read src="servlet:super:/images/{1}.{2}" />
					</otherwise>
				</select>
			</match>
			
			<match pattern="icons/*x*/*/*.png">
				<select type="resource-exists">
					<when test="icons/{1}x{2}/{3}/{4}.png">
						<read src="icons/{1}x{2}/{3}/{4}.png" />
					</when>
					<otherwise>
						<read
							src="servlet:super:/icons/{1}x{2}/{3}/{4}.png" />
					</otherwise>
				</select>
			</match>
			
			<!--+
				| forward any unknown stuff to the super block 
				| NOTE: This must be the LAST matcher of the LAST pipeline!
				+-->
			<match pattern="**">
				<read src="servlet:super:/{1}" />
			</match>
			
			<handle-errors>
				<call resource="error-handling" />
			</handle-errors>
			
		</pipeline>
		
	</pipelines>
</sitemap>
